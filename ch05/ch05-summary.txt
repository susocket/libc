ch05 字符串处理函数小结

//比较内存内容
int bcmp(const void *s1, const void *s2, int n);

//拷贝内存内容
int bcpy(const void *src, void *dest, int a);

//将一段内存内容清零
void bzero(void *s, int n);

//在一整数中查找第一个值为真的位
int ffs(int i);

//查找字符串中第一个出现的指定字符
char *index(const char *s, int c);

//拷贝内存内容，返回目标字符串中指定字符的地址
void *memccpy(void *dest, const void *src, int c, size_t n);

//在某一内存范围中查找一特定字符
void *memchr(const void *s, int c, size_t n);

//比较内存内容
int memcmp(const void *s1, const void *s2, sizt_t n);

//拷贝内存内容
void *memcpy(void *dest, const void *src, size_t n);

//对内存区域编码（xor 42）
void memfrob(void *s, size_t n);

//拷贝内存内容（地址可以重叠）
void *memmove(void *dest, const void *src, size_t n);

//将一段内存空间赋值
void *memset(void *s, int c, size_t n);

//忽略大小写比较字符串
int strcasecmp(const char *s1, const char *s2);

//连接两个字符串
char *strcat(char *dest, const char *src);

//在字符串中查找指定字符
char *strchr(const char *s, int c);

//比较字符串
int strcmp(const char *s1, const char *s2);

//采用目前区域的字符串排列次序来比较字符串
int strcoll(const char *s1, const char *s2);

//拷贝字符串
char *strcpy(char *dest, const char *src);

//返回字符串中连续不含指定字符串内容的字符数
size_t strcspn(const char *s, const char *reject);

//返回字符串中连续含有指定字符串内容的字符数
size_t strspn(const char *s, const char *accept);

//复制字符串
char *strdup(const char *s);

//随机重组字符串内的字符
char *strfry(char *string);

// 字符串的长度
size_t strlen(const char *s);

//忽略大小写比较字符串
int strncasecmp(const char *s1, const char *s2, size_t n);

//连接两个字符串
char *strncat(char *dest, const char *src, size_t n);

//比较字符串
int strncmp(const char *s1, const char *s2, size_t n);

//拷贝字符串
char *strncpy(char *dest, const char *src, size_t n);

//查找字符串中第一个出现的指定字符
char *strpbrk(const char *s, const char *accept);

//查找字符串中最后出现的一个指定字符
char *strrchr(const char *s, int c);

//在一个字符串中查找子串
char *strstr(const char *haystack, const char *needle);

// 分割字符串
char *strtok(char *s, const char *delim);